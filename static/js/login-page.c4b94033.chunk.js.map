{"version":3,"sources":["components/LoginForm/LoginForm.module.css","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js"],"names":["module","exports","LoginForm","dispatch","useDispatch","initialValues","email","password","validationSchema","Yup","required","min","max","onSubmit","values","resetForm","authOperations","logIn","className","s","form","label","fieldInput","name","type","component","validatorError","FormButton","LoginPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,8BAA8B,eAAiB,oC,8JCS/H,SAASC,IACtB,IAAMC,EAAWC,cAEjB,OACE,8BACE,cAAC,IAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,iBAAkBC,IAAW,CAC3BH,MAAOG,MAAaH,MAAM,iBAAiBI,SAAS,YACpDH,SAAUE,MACPE,IAAI,EAAG,yCACPC,IAAI,GAAI,yCACRF,SAAS,cAEdG,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBZ,EAASa,IAAeC,MAAMH,IAC9BC,KAXJ,SAcE,eAAC,IAAD,CAAMG,UAAWC,IAAEC,KAAnB,UACE,wBAAOF,UAAWC,IAAEE,MAApB,mBAEE,cAAC,IAAD,CAAOH,UAAWC,IAAEG,WAAYC,KAAK,QAAQC,KAAK,UAClD,cAAC,IAAD,CACED,KAAK,QACLE,UAAU,OACVP,UAAWC,IAAEO,oBAGjB,wBAAOR,UAAWC,IAAEE,MAApB,sBAEE,cAAC,IAAD,CAAOH,UAAWC,IAAEG,WAAYC,KAAK,WAAWC,KAAK,aACrD,cAAC,IAAD,CACED,KAAK,WACLE,UAAU,OACVP,UAAWC,IAAEO,oBAGjB,cAACC,EAAA,EAAD,CAAYH,KAAK,SAAjB,0BC7CK,SAASI,IACtB,OACE,mCACE,cAAC1B,EAAD","file":"static/js/login-page.c4b94033.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1tF8D\",\"label\":\"LoginForm_label__1Vf97\",\"fieldInput\":\"LoginForm_fieldInput__1EHqT\",\"validatorError\":\"LoginForm_validatorError__2ea7h\"};","import * as Yup from 'yup';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport FormButton from '../FormButton/FormButton';\nimport React from 'react';\nimport { authOperations } from '../../redux/auth';\nimport s from './LoginForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={Yup.object({\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(authOperations.logIn(values));\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Email:\n            <Field className={s.fieldInput} name=\"email\" type=\"email\" />\n            <ErrorMessage\n              name=\"email\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Password:\n            <Field className={s.fieldInput} name=\"password\" type=\"password\" />\n            <ErrorMessage\n              name=\"password\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Login</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import LoginForm from 'components/LoginForm';\nimport React from 'react';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"sourceRoot":""}