{"version":3,"sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js"],"names":["module","exports","RegisterForm","dispatch","useDispatch","initialValues","name","email","password","validationSchema","Yup","required","min","max","onSubmit","values","resetForm","authOperations","register","className","s","form","label","fieldInput","type","component","validatorError","FormButton","RegisterPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,WAAa,iCAAiC,eAAiB,uC,4JCSxI,SAASC,IACtB,IAAMC,EAAWC,cAEjB,OACE,8BACE,cAAC,IAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,iBAAkBC,IAAW,CAC3BJ,KAAMI,MAAaC,SAAS,YAC5BJ,MAAOG,MAAaH,MAAM,iBAAiBI,SAAS,YACpDH,SAAUE,MACPE,IAAI,EAAG,yCACPC,IAAI,GAAI,yCACRF,SAAS,cAEdG,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBb,EAASc,IAAeC,SAASH,IACjCC,KAZJ,SAeE,eAAC,IAAD,CAAMG,UAAWC,IAAEC,KAAnB,UACE,wBAAOF,UAAWC,IAAEE,MAApB,kBAEE,cAAC,IAAD,CAAOH,UAAWC,IAAEG,WAAYjB,KAAK,OAAOkB,KAAK,SACjD,cAAC,IAAD,CACElB,KAAK,OACLmB,UAAU,OACVN,UAAWC,IAAEM,oBAGjB,wBAAOP,UAAWC,IAAEE,MAApB,mBAEE,cAAC,IAAD,CAAOH,UAAWC,IAAEG,WAAYjB,KAAK,QAAQkB,KAAK,UAClD,cAAC,IAAD,CACElB,KAAK,QACLmB,UAAU,OACVN,UAAWC,IAAEM,oBAGjB,wBAAOP,UAAWC,IAAEE,MAApB,sBAEE,cAAC,IAAD,CAAOH,UAAWC,IAAEG,WAAYjB,KAAK,WAAWkB,KAAK,aACrD,cAAC,IAAD,CACElB,KAAK,WACLmB,UAAU,OACVN,UAAWC,IAAEM,oBAGjB,cAACC,EAAA,EAAD,CAAYH,KAAK,SAAjB,6BCvDK,SAASI,IACtB,OACE,mCACE,cAAC1B,EAAD","file":"static/js/register-page.f5102040.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__cGQtP\",\"label\":\"RegisterForm_label__3nDE7\",\"fieldInput\":\"RegisterForm_fieldInput__1bgLQ\",\"validatorError\":\"RegisterForm_validatorError__273yk\"};","import * as Yup from 'yup';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport FormButton from '../FormButton/FormButton';\nimport React from 'react';\nimport { authOperations } from '../../redux/auth';\nimport s from './RegisterForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string().required('Required'),\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(authOperations.register(values));\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Name:\n            <Field className={s.fieldInput} name=\"name\" type=\"text\" />\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Email:\n            <Field className={s.fieldInput} name=\"email\" type=\"email\" />\n            <ErrorMessage\n              name=\"email\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Password:\n            <Field className={s.fieldInput} name=\"password\" type=\"password\" />\n            <ErrorMessage\n              name=\"password\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Register</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"sourceRoot":""}