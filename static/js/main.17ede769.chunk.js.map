{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ErrorMessage/ErrorMessage.module.css","components/Filter/Filter.module.css","components/Loading/Loading.module.css","components/RegisterForm/RegisterForm.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/contacts/contacts-actions.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","components/AuthNav/AuthNav.js","components/FormButton/FormButton.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ErrorMessage/ErrorMessage.js","components/Filter/Filter.js","components/Loading/Loading.js","pages/ContactsPage/ContactsPage.js","pages/HomePage/HomePage.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/LoginForm/LoginForm.module.css","components/ContactItem/ContactItem.module.css","components/FormButton/FormButton.module.css"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","checkCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","createReducer","email","authOperations","fulfilled","payload","combineReducers","changeFilter","createAction","fetchContacts","addContact","contact","deleteContact","contactId","delete","contactsAPI","contacts","message","result","items","action","filter","id","actions","isLoading","pending","rejected","error","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","AuthNav","to","exact","FormButton","type","onClick","disabled","children","allyProps","className","s","button","UserMenu","userName","useSelector","dispatch","useDispatch","AppBar","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","contactsSelectors","number","length","isInContacts","contactsOperations","alert","initialValues","validationSchema","Yup","matches","required","onSubmit","values","resetForm","form","label","fieldInput","component","validatorError","ContactItem","item","itemName","itemPhone","size","ContactList","useEffect","list","map","ErrorMessage","Filter","onChange","e","contactsActions","target","value","Loading","color","height","width","ContactsPage","HomePage","LoginForm","password","min","max","LoginPage","RegisterForm","RegisterPage","App","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.17ede769.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"ErrorMessage_message__1PSvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldInput\":\"Filter_fieldInput__1at_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Loading_item__64Y4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__cGQtP\",\"label\":\"RegisterForm_label__3nDE7\",\"fieldInput\":\"RegisterForm_fieldInput__1bgLQ\",\"validatorError\":\"RegisterForm_validatorError__273yk\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  remove() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk('auth/register', async credentials => {\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logIn = createAsyncThunk('auth/login', async credentials => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout');\n    token.remove();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n  }\n});\n\nconst checkCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  checkCurrentUser,\n};\nexport default operations;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n};\nexport default authSelectors;\n","import authOperations from './auth-operations';\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst user = createReducer(\n  { name: null, email: null },\n  {\n    [authOperations.register.fulfilled]: (state, { payload }) => ({\n      name: payload.user.name,\n      email: payload.user.email,\n    }),\n    [authOperations.logIn.fulfilled]: (state, { payload }) => ({\n      name: payload.user.name,\n      email: payload.user.email,\n    }),\n    [authOperations.logOut.fulfilled]: (state, { payload }) => ({\n      name: null,\n      email: null,\n    }),\n    [authOperations.checkCurrentUser.fulfilled]: (state, { payload }) => ({\n      name: payload.name,\n      email: payload.email,\n    }),\n  },\n);\n\nconst token = createReducer(null, {\n  [authOperations.register.fulfilled]: (state, { payload }) => payload.token,\n  [authOperations.logIn.fulfilled]: (state, { payload }) => payload.token,\n  [authOperations.logOut.fulfilled]: () => null,\n});\n\nconst isLoggedIn = createReducer(false, {\n  [authOperations.register.fulfilled]: () => true,\n  [authOperations.logIn.fulfilled]: () => true,\n  [authOperations.logOut.fulfilled]: () => false,\n  [authOperations.checkCurrentUser.fulfilled]: () => true,\n});\n\nexport default combineReducers({ user, token, isLoggedIn });\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(contact) {\n  const { data } = await axios.post('/contacts', contact);\n  return data;\n}\n\nexport async function deleteContact(contactId) {\n  const { data } = await axios.delete(`/contacts/${contactId}`);\n  return data;\n}\n","import * as contactsAPI from 'services/contacts-api';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact, { rejectWithValue }) => {\n    try {\n      const result = await contactsAPI.addContact(contact);\n      return result;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await contactsAPI.deleteContact(contactId);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n","import * as actions from './contacts-actions';\n\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from './contacts-operations';\n\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (state, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.pending]: () => null,\n  [fetchContacts.rejected]: (_, action) => action.payload,\n\n  [addContact.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n\n  [deleteContact.pending]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n});\n\nexport default combineReducers({ items, filter, isLoading, error });\n","import {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  REHYDRATE,\n  persistReducer,\n  persistStore,\n} from 'redux-persist';\n\nimport { authReducer } from './auth';\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\n// const store = configureStore({\n//   reducer: contactsReducer,\n//   devTools: process.env.NODE_ENV === 'development',\n// });\n\n// export default store;\n","import { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nexport default function AuthNav() {\n  return (\n    <>\n      <NavLink to=\"/register\" exact>\n        Register\n      </NavLink>\n      <NavLink to=\"/login\" exact>\n        Login\n      </NavLink>\n    </>\n  );\n}\n","import React from 'react';\nimport s from './FormButton.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function FormButton({\n  type = 'button',\n  onClick,\n  disabled = false,\n  children,\n  ...allyProps\n}) {\n  return (\n    <button\n      type={type}\n      className={s.button}\n      disabled={disabled}\n      onClick={onClick}\n      {...allyProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nFormButton.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    .isRequired,\n};\n","import { authOperations, authSelectors } from '../../redux/auth';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FormButton from 'components/FormButton';\nimport React from 'react';\n\nexport default function UserMenu() {\n  const userName = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      Hello, {userName}!\n      <FormButton\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Logout\n      </FormButton>\n    </div>\n  );\n}\n","import AuthNav from 'components/AuthNav';\nimport { NavLink } from 'react-router-dom';\nimport React from 'react';\nimport UserMenu from 'components/UserMenu';\nimport { authSelectors } from '../../redux/auth';\nimport { useSelector } from 'react-redux';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <header>\n      <h1>Phonebook</h1>\n      {isLoggedIn ? (\n        <>\n          <UserMenu />\n          <NavLink to=\"/contacts\">Contacts</NavLink>\n        </>\n      ) : (\n        <AuthNav />\n      )}\n    </header>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import * as Yup from 'yup';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport FormButton from '../FormButton/FormButton';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const isInContacts = name => {\n    name = name.toLowerCase();\n    return (\n      contacts.filter(contact => contact.name.toLowerCase().includes(name))\n        .length > 0\n    );\n  };\n\n  const addContact = ({ name, number }) => {\n    if (isInContacts(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(contactsOperations.addContact({ name, number }));\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .matches(\n              /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n              \"Name can contain only letters, ', - and space. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\",\n            )\n            .required(),\n          number: Yup.string()\n            .matches(\n              /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n              'Phone number should contain only numbers and it also could contain spaces, dash, parenthesis and startts with +',\n            )\n            .required(),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          addContact(values);\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Name:\n            <Field className={s.fieldInput} name=\"name\" type=\"text\" />\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Phone number:\n            <Field className={s.fieldInput} name=\"number\" type=\"tel\" />\n            <ErrorMessage\n              name=\"number\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import FormButton from '../FormButton';\nimport { MdDelete } from 'react-icons/md';\nimport { contactsOperations } from 'redux/contacts';\nimport s from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function ContactItem({ contact }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={s.item}>\n      <div>\n        <p className={s.itemName}>{contact.name}</p>\n        <p className={s.itemPhone}>{contact.number}</p>\n      </div>\n      <FormButton\n        onClick={() => dispatch(contactsOperations.deleteContact(contact.id))}\n        aria-label=\"Delete contact\"\n      >\n        <MdDelete size=\"18\" />\n      </FormButton>\n    </li>\n  );\n}\n","import { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactItem from 'components/ContactItem';\nimport s from './ContactList.module.css';\nimport { useEffect } from 'react';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.length > 0 &&\n        contacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport s from './ErrorMessage.module.css';\n\nexport default function ErrorMessage({ message }) {\n  return <div className={s.message}>{message}</div>;\n}\n","import React from 'react';\nimport { contactsActions } from 'redux/contacts';\nimport s from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <label>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(contactsActions.changeFilter(e.target.value));\n          }}\n          className={s.fieldInput}\n        />\n      </label>\n    </div>\n  );\n}\n","import Loader from 'react-loader-spinner';\nimport React from 'react';\nimport s from './Loading.module.css';\n\nexport default function Loading() {\n  return (\n    <Loader\n      className={s.item}\n      type=\"Audio\"\n      color=\"#52ab98\"\n      height={50}\n      width={50}\n    />\n  );\n}\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport ErrorMessage from 'components/ErrorMessage';\nimport Filter from 'components/Filter';\nimport Loading from 'components/Loading';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nexport default function ContactsPage() {\n  const error = useSelector(state => state.error);\n  const isLoading = useSelector(state => state.isLoading);\n\n  return (\n    <>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      {error && <ErrorMessage message={error} />}\n      {isLoading && <Loading />}\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function HomePage() {\n  return <div>Home page</div>;\n}\n","import * as Yup from 'yup';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport FormButton from '../FormButton/FormButton';\nimport React from 'react';\nimport { authOperations } from '../../redux/auth';\nimport s from './LoginForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={Yup.object({\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(authOperations.logIn(values));\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Email:\n            <Field className={s.fieldInput} name=\"email\" type=\"email\" />\n            <ErrorMessage\n              name=\"email\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Password:\n            <Field className={s.fieldInput} name=\"password\" type=\"password\" />\n            <ErrorMessage\n              name=\"password\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Login</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import LoginForm from 'components/LoginForm';\nimport React from 'react';\n\nexport default function LoginPage() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\n\nimport FormButton from '../FormButton/FormButton';\nimport React from 'react';\nimport { authOperations } from '../../redux/auth';\nimport s from './RegisterForm.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={Yup.object({\n          name: Yup.string().required('Required'),\n          email: Yup.string().email('Invalid email').required('Required'),\n          password: Yup.string()\n            .min(7, 'Password should be at least 7 symbols')\n            .max(15, 'Password should be maximum 15 symbols')\n            .required('Required'),\n        })}\n        onSubmit={(values, { resetForm }) => {\n          dispatch(authOperations.register(values));\n          resetForm();\n        }}\n      >\n        <Form className={s.form}>\n          <label className={s.label}>\n            Name:\n            <Field className={s.fieldInput} name=\"name\" type=\"text\" />\n            <ErrorMessage\n              name=\"name\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Email:\n            <Field className={s.fieldInput} name=\"email\" type=\"email\" />\n            <ErrorMessage\n              name=\"email\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <label className={s.label}>\n            Password:\n            <Field className={s.fieldInput} name=\"password\" type=\"password\" />\n            <ErrorMessage\n              name=\"password\"\n              component=\"span\"\n              className={s.validatorError}\n            />\n          </label>\n          <FormButton type=\"submit\">Register</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n","import './App.css';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport AppBar from 'components/AppBar';\nimport ContactsPage from 'pages/ContactsPage';\nimport HomePage from 'pages/HomePage';\nimport LoginPage from 'pages/LoginPage';\nimport RegisterPage from 'pages/RegisterPage';\nimport { authOperations } from './redux/auth';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.checkCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <Route path=\"/contacts\">\n          <ContactsPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import './index.css';\n\nimport { persistor, store } from './redux/store';\n\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"fieldInput\":\"ContactForm_fieldInput__3zV51\",\"validatorError\":\"ContactForm_validatorError__3ngg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1tF8D\",\"label\":\"LoginForm_label__1Vf97\",\"fieldInput\":\"LoginForm_fieldInput__1EHqT\",\"validatorError\":\"LoginForm_validatorError__2ea7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2KdFa\",\"itemName\":\"ContactItem_itemName__3yDih\",\"itemPhone\":\"ContactItem_itemPhone__1zXxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FormButton_button__2-gNS\"};"],"sourceRoot":""}